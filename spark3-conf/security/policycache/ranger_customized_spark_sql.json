{
  "serviceName": "spark_sql",
  "serviceId": 1,
  "policyVersion": 6,
  "policyUpdateTime": 1688184663000,
  "policies": [
      {
          "id": 1,
          "guid": "e14cea86-d51c-48bc-a854-3689bde14a95",
          "isEnabled": true,
          "version": 1,
          "service": "spark_sql",
          "name": "all - hiveservice",
          "policyType": 0,
          "policyPriority": 0,
          "description": "Policy for all - hiveservice",
          "isAuditEnabled": true,
          "resources": {
              "hiveservice": {
                  "values": [
                      "*"
                  ],
                  "isExcludes": false,
                  "isRecursive": false
              }
          },
          "policyItems": [
              {
                  "accesses": [
                      {
                          "type": "select",
                          "isAllowed": true
                      },
                      {
                          "type": "update",
                          "isAllowed": true
                      },
                      {
                          "type": "create",
                          "isAllowed": true
                      },
                      {
                          "type": "drop",
                          "isAllowed": true
                      },
                      {
                          "type": "alter",
                          "isAllowed": true
                      },
                      {
                          "type": "index",
                          "isAllowed": true
                      },
                      {
                          "type": "lock",
                          "isAllowed": true
                      },
                      {
                          "type": "all",
                          "isAllowed": true
                      },
                      {
                          "type": "read",
                          "isAllowed": true
                      },
                      {
                          "type": "write",
                          "isAllowed": true
                      },
                      {
                          "type": "repladmin",
                          "isAllowed": true
                      },
                      {
                          "type": "serviceadmin",
                          "isAllowed": true
                      },
                      {
                          "type": "tempudfadmin",
                          "isAllowed": true
                      },
                      {
                          "type": "refresh",
                          "isAllowed": true
                      }
                  ],
                  "users": [
                      "hive"
                  ],
                  "groups": [],
                  "roles": [],
                  "conditions": [],
                  "delegateAdmin": true
              }
          ],
          "denyPolicyItems": [],
          "allowExceptions": [],
          "denyExceptions": [],
          "dataMaskPolicyItems": [],
          "rowFilterPolicyItems": [],
          "serviceType": "3",
          "options": {},
          "validitySchedules": [],
          "policyLabels": [],
          "zoneName": "",
          "isDenyAllElse": false
      },
      {
          "id": 2,
          "guid": "6efd49e6-267a-47be-8445-9a4c2b0c2ab7",
          "isEnabled": true,
          "version": 1,
          "service": "spark_sql",
          "name": "all - database, table, column",
          "policyType": 0,
          "policyPriority": 0,
          "description": "Policy for all - database, table, column",
          "isAuditEnabled": true,
          "resources": {
              "database": {
                  "values": [
                      "*"
                  ],
                  "isExcludes": false,
                  "isRecursive": false
              },
              "column": {
                  "values": [
                      "*"
                  ],
                  "isExcludes": false,
                  "isRecursive": false
              },
              "table": {
                  "values": [
                      "*"
                  ],
                  "isExcludes": false,
                  "isRecursive": false
              }
          },
          "policyItems": [
              {
                  "accesses": [
                      {
                          "type": "select",
                          "isAllowed": true
                      },
                      {
                          "type": "update",
                          "isAllowed": true
                      },
                      {
                          "type": "create",
                          "isAllowed": true
                      },
                      {
                          "type": "drop",
                          "isAllowed": true
                      },
                      {
                          "type": "alter",
                          "isAllowed": true
                      },
                      {
                          "type": "index",
                          "isAllowed": true
                      },
                      {
                          "type": "lock",
                          "isAllowed": true
                      },
                      {
                          "type": "all",
                          "isAllowed": true
                      },
                      {
                          "type": "read",
                          "isAllowed": true
                      },
                      {
                          "type": "write",
                          "isAllowed": true
                      },
                      {
                          "type": "repladmin",
                          "isAllowed": true
                      },
                      {
                          "type": "serviceadmin",
                          "isAllowed": true
                      },
                      {
                          "type": "tempudfadmin",
                          "isAllowed": true
                      },
                      {
                          "type": "refresh",
                          "isAllowed": true
                      }
                  ],
                  "users": [
                      "hive"
                  ],
                  "groups": [],
                  "roles": [],
                  "conditions": [],
                  "delegateAdmin": true
              }
          ],
          "denyPolicyItems": [],
          "allowExceptions": [],
          "denyExceptions": [],
          "dataMaskPolicyItems": [],
          "rowFilterPolicyItems": [],
          "serviceType": "3",
          "options": {},
          "validitySchedules": [],
          "policyLabels": [],
          "zoneName": "",
          "isDenyAllElse": false
      },
      {
          "id": 3,
          "guid": "fa862be4-01d5-4e4c-9650-f29faab5240d",
          "isEnabled": true,
          "version": 1,
          "service": "spark_sql",
          "name": "all - database, udf",
          "policyType": 0,
          "policyPriority": 0,
          "description": "Policy for all - database, udf",
          "isAuditEnabled": true,
          "resources": {
              "database": {
                  "values": [
                      "*"
                  ],
                  "isExcludes": false,
                  "isRecursive": false
              },
              "udf": {
                  "values": [
                      "*"
                  ],
                  "isExcludes": false,
                  "isRecursive": false
              }
          },
          "policyItems": [
              {
                  "accesses": [
                      {
                          "type": "select",
                          "isAllowed": true
                      },
                      {
                          "type": "update",
                          "isAllowed": true
                      },
                      {
                          "type": "create",
                          "isAllowed": true
                      },
                      {
                          "type": "drop",
                          "isAllowed": true
                      },
                      {
                          "type": "alter",
                          "isAllowed": true
                      },
                      {
                          "type": "index",
                          "isAllowed": true
                      },
                      {
                          "type": "lock",
                          "isAllowed": true
                      },
                      {
                          "type": "all",
                          "isAllowed": true
                      },
                      {
                          "type": "read",
                          "isAllowed": true
                      },
                      {
                          "type": "write",
                          "isAllowed": true
                      },
                      {
                          "type": "repladmin",
                          "isAllowed": true
                      },
                      {
                          "type": "serviceadmin",
                          "isAllowed": true
                      },
                      {
                          "type": "tempudfadmin",
                          "isAllowed": true
                      },
                      {
                          "type": "refresh",
                          "isAllowed": true
                      }
                  ],
                  "users": [
                      "hive"
                  ],
                  "groups": [],
                  "roles": [],
                  "conditions": [],
                  "delegateAdmin": true
              }
          ],
          "denyPolicyItems": [],
          "allowExceptions": [],
          "denyExceptions": [],
          "dataMaskPolicyItems": [],
          "rowFilterPolicyItems": [],
          "serviceType": "3",
          "options": {},
          "validitySchedules": [],
          "policyLabels": [],
          "zoneName": "",
          "isDenyAllElse": false
      },
      {
          "id": 4,
          "guid": "a3a0cabb-7894-43d1-8331-b005e91b7767",
          "isEnabled": true,
          "version": 1,
          "service": "spark_sql",
          "name": "all - url",
          "policyType": 0,
          "policyPriority": 0,
          "description": "Policy for all - url",
          "isAuditEnabled": true,
          "resources": {
              "url": {
                  "values": [
                      "*"
                  ],
                  "isExcludes": false,
                  "isRecursive": true
              }
          },
          "policyItems": [
              {
                  "accesses": [
                      {
                          "type": "select",
                          "isAllowed": true
                      },
                      {
                          "type": "update",
                          "isAllowed": true
                      },
                      {
                          "type": "create",
                          "isAllowed": true
                      },
                      {
                          "type": "drop",
                          "isAllowed": true
                      },
                      {
                          "type": "alter",
                          "isAllowed": true
                      },
                      {
                          "type": "index",
                          "isAllowed": true
                      },
                      {
                          "type": "lock",
                          "isAllowed": true
                      },
                      {
                          "type": "all",
                          "isAllowed": true
                      },
                      {
                          "type": "read",
                          "isAllowed": true
                      },
                      {
                          "type": "write",
                          "isAllowed": true
                      },
                      {
                          "type": "repladmin",
                          "isAllowed": true
                      },
                      {
                          "type": "serviceadmin",
                          "isAllowed": true
                      },
                      {
                          "type": "tempudfadmin",
                          "isAllowed": true
                      },
                      {
                          "type": "refresh",
                          "isAllowed": true
                      }
                  ],
                  "users": [
                      "hive"
                  ],
                  "groups": [],
                  "roles": [],
                  "conditions": [],
                  "delegateAdmin": true
              }
          ],
          "denyPolicyItems": [],
          "allowExceptions": [],
          "denyExceptions": [],
          "dataMaskPolicyItems": [],
          "rowFilterPolicyItems": [],
          "serviceType": "3",
          "options": {},
          "validitySchedules": [],
          "policyLabels": [],
          "zoneName": "",
          "isDenyAllElse": false
      }
  ],
  "serviceDef": {
      "id": 3,
      "guid": "3e1afb5a-184a-4e82-9d9c-87a5cacc243c",
      "isEnabled": true,
      "createTime": 1688184201000,
      "updateTime": 1688184201000,
      "version": 1,
      "name": "hive",
      "implClass": "org.apache.ranger.services.hive.RangerServiceHive",
      "label": "Hive Server2",
      "description": "Hive Server2",
      "options": {
          "enableDenyAndExceptionsInPolicies": "true"
      },
      "configs": [
          {
              "itemId": 1,
              "name": "username",
              "type": "string",
              "mandatory": true,
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "Username"
          },
          {
              "itemId": 2,
              "name": "password",
              "type": "password",
              "mandatory": true,
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "Password"
          },
          {
              "itemId": 3,
              "name": "jdbc.driverClassName",
              "type": "string",
              "mandatory": true,
              "defaultValue": "org.apache.hive.jdbc.HiveDriver",
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": ""
          },
          {
              "itemId": 4,
              "name": "jdbc.url",
              "type": "string",
              "mandatory": true,
              "defaultValue": "",
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "{\"TextFieldWithIcon\":true, \"info\": \"1.For Remote Mode, eg.<br>jdbc:hive2://&lt;host&gt;:&lt;port&gt;<br>2.For Embedded Mode (no host or port), eg.<br>jdbc:hive2:///;initFile=&lt;file&gt;<br>3.For HTTP Mode, eg.<br>jdbc:hive2://&lt;host&gt;:&lt;port&gt;/;<br>transportMode=http;httpPath=&lt;httpPath&gt;<br>4.For SSL Mode, eg.<br>jdbc:hive2://&lt;host&gt;:&lt;port&gt;/;ssl=true;<br>sslTrustStore=tStore;trustStorePassword=pw<br>5.For ZooKeeper Mode, eg.<br>jdbc:hive2://&lt;host&gt;/;serviceDiscoveryMode=<br>zooKeeper;zooKeeperNamespace=hiveserver2<br>6.For Kerberos Mode, eg.<br>jdbc:hive2://&lt;host&gt;:&lt;port&gt;/;<br>principal=hive/domain@EXAMPLE.COM<br>\"}"
          },
          {
              "itemId": 5,
              "name": "commonNameForCertificate",
              "type": "string",
              "mandatory": false,
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "Common Name for Certificate"
          }
      ],
      "resources": [
          {
              "itemId": 1,
              "name": "database",
              "type": "string",
              "level": 10,
              "mandatory": true,
              "lookupSupported": true,
              "recursiveSupported": false,
              "excludesSupported": true,
              "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
              "matcherOptions": {
                  "wildCard": "true",
                  "ignoreCase": "true"
              },
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "Hive Database",
              "description": "Hive Database",
              "accessTypeRestrictions": [],
              "isValidLeaf": false
          },
          {
              "itemId": 5,
              "name": "url",
              "type": "string",
              "level": 10,
              "mandatory": true,
              "lookupSupported": false,
              "recursiveSupported": true,
              "excludesSupported": false,
              "matcher": "org.apache.ranger.plugin.resourcematcher.RangerURLResourceMatcher",
              "matcherOptions": {
                  "wildCard": "true",
                  "ignoreCase": "false"
              },
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "URL",
              "description": "URL",
              "accessTypeRestrictions": [],
              "isValidLeaf": true
          },
          {
              "itemId": 6,
              "name": "hiveservice",
              "type": "string",
              "level": 10,
              "mandatory": true,
              "lookupSupported": false,
              "recursiveSupported": false,
              "excludesSupported": false,
              "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
              "matcherOptions": {
                  "wildCard": "true",
                  "ignoreCase": "false"
              },
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "Hive Service",
              "description": "Hive Service",
              "accessTypeRestrictions": [],
              "isValidLeaf": true
          },
          {
              "itemId": 7,
              "name": "global",
              "type": "string",
              "level": 10,
              "mandatory": false,
              "lookupSupported": false,
              "recursiveSupported": false,
              "excludesSupported": false,
              "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
              "matcherOptions": {
                  "wildCard": "true",
                  "ignoreCase": "false"
              },
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "Global",
              "description": "Global",
              "accessTypeRestrictions": [],
              "isValidLeaf": true
          },
          {
              "itemId": 2,
              "name": "table",
              "type": "string",
              "level": 20,
              "parent": "database",
              "mandatory": true,
              "lookupSupported": true,
              "recursiveSupported": false,
              "excludesSupported": true,
              "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
              "matcherOptions": {
                  "wildCard": "true",
                  "ignoreCase": "true"
              },
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "Hive Table",
              "description": "Hive Table",
              "accessTypeRestrictions": [],
              "isValidLeaf": false
          },
          {
              "itemId": 3,
              "name": "udf",
              "type": "string",
              "level": 20,
              "parent": "database",
              "mandatory": true,
              "lookupSupported": true,
              "recursiveSupported": false,
              "excludesSupported": true,
              "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
              "matcherOptions": {
                  "wildCard": "true",
                  "ignoreCase": "true"
              },
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "Hive UDF",
              "description": "Hive UDF",
              "accessTypeRestrictions": [],
              "isValidLeaf": true
          },
          {
              "itemId": 4,
              "name": "column",
              "type": "string",
              "level": 30,
              "parent": "table",
              "mandatory": true,
              "lookupSupported": true,
              "recursiveSupported": false,
              "excludesSupported": true,
              "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
              "matcherOptions": {
                  "wildCard": "true",
                  "ignoreCase": "true"
              },
              "validationRegEx": "",
              "validationMessage": "",
              "uiHint": "",
              "label": "Hive Column",
              "description": "Hive Column",
              "accessTypeRestrictions": [],
              "isValidLeaf": true
          }
      ],
      "accessTypes": [
          {
              "itemId": 1,
              "name": "select",
              "label": "select",
              "impliedGrants": []
          },
          {
              "itemId": 2,
              "name": "update",
              "label": "update",
              "impliedGrants": []
          },
          {
              "itemId": 3,
              "name": "create",
              "label": "Create",
              "impliedGrants": []
          },
          {
              "itemId": 4,
              "name": "drop",
              "label": "Drop",
              "impliedGrants": []
          },
          {
              "itemId": 5,
              "name": "alter",
              "label": "Alter",
              "impliedGrants": []
          },
          {
              "itemId": 6,
              "name": "index",
              "label": "Index",
              "impliedGrants": []
          },
          {
              "itemId": 7,
              "name": "lock",
              "label": "Lock",
              "impliedGrants": []
          },
          {
              "itemId": 8,
              "name": "all",
              "label": "All",
              "impliedGrants": [
                  "select",
                  "update",
                  "create",
                  "drop",
                  "alter",
                  "index",
                  "lock",
                  "read",
                  "write",
                  "repladmin",
                  "serviceadmin",
                  "refresh"
              ]
          },
          {
              "itemId": 9,
              "name": "read",
              "label": "Read",
              "impliedGrants": []
          },
          {
              "itemId": 10,
              "name": "write",
              "label": "Write",
              "impliedGrants": []
          },
          {
              "itemId": 11,
              "name": "repladmin",
              "label": "ReplAdmin",
              "impliedGrants": []
          },
          {
              "itemId": 12,
              "name": "serviceadmin",
              "label": "Service Admin",
              "impliedGrants": []
          },
          {
              "itemId": 13,
              "name": "tempudfadmin",
              "label": "Temporary UDF Admin",
              "impliedGrants": []
          },
          {
              "itemId": 14,
              "name": "refresh",
              "label": "Refresh",
              "impliedGrants": []
          }
      ],
      "policyConditions": [],
      "contextEnrichers": [],
      "enums": [],
      "dataMaskDef": {
          "maskTypes": [
              {
                  "itemId": 1,
                  "name": "MASK",
                  "label": "Redact",
                  "description": "Replace lowercase with 'x', uppercase with 'X', digits with '0'",
                  "transformer": "mask({col})",
                  "dataMaskOptions": {}
              },
              {
                  "itemId": 2,
                  "name": "MASK_SHOW_LAST_4",
                  "label": "Partial mask: show last 4",
                  "description": "Show last 4 characters; replace rest with 'x'",
                  "transformer": "mask_show_last_n({col}, 4, 'x', 'x', 'x', -1, '1')",
                  "dataMaskOptions": {}
              },
              {
                  "itemId": 3,
                  "name": "MASK_SHOW_FIRST_4",
                  "label": "Partial mask: show first 4",
                  "description": "Show first 4 characters; replace rest with 'x'",
                  "transformer": "mask_show_first_n({col}, 4, 'x', 'x', 'x', -1, '1')",
                  "dataMaskOptions": {}
              },
              {
                  "itemId": 4,
                  "name": "MASK_HASH",
                  "label": "Hash",
                  "description": "Hash the value",
                  "transformer": "mask_hash({col})",
                  "dataMaskOptions": {}
              },
              {
                  "itemId": 5,
                  "name": "MASK_NULL",
                  "label": "Nullify",
                  "description": "Replace with NULL",
                  "dataMaskOptions": {}
              },
              {
                  "itemId": 6,
                  "name": "MASK_NONE",
                  "label": "Unmasked (retain original value)",
                  "description": "No masking",
                  "dataMaskOptions": {}
              },
              {
                  "itemId": 12,
                  "name": "MASK_DATE_SHOW_YEAR",
                  "label": "Date: show only year",
                  "description": "Date: show only year",
                  "transformer": "mask({col}, 'x', 'x', 'x', -1, '1', 1, 0, -1)",
                  "dataMaskOptions": {}
              },
              {
                  "itemId": 13,
                  "name": "CUSTOM",
                  "label": "Custom",
                  "description": "Custom",
                  "dataMaskOptions": {}
              }
          ],
          "accessTypes": [
              {
                  "itemId": 1,
                  "name": "select",
                  "label": "select",
                  "impliedGrants": []
              }
          ],
          "resources": [
              {
                  "itemId": 1,
                  "name": "database",
                  "type": "string",
                  "level": 10,
                  "mandatory": true,
                  "lookupSupported": true,
                  "recursiveSupported": false,
                  "excludesSupported": false,
                  "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
                  "matcherOptions": {
                      "wildCard": "false",
                      "ignoreCase": "true"
                  },
                  "validationRegEx": "",
                  "validationMessage": "",
                  "uiHint": "{ \"singleValue\":true }",
                  "label": "Hive Database",
                  "description": "Hive Database",
                  "accessTypeRestrictions": [],
                  "isValidLeaf": false
              },
              {
                  "itemId": 2,
                  "name": "table",
                  "type": "string",
                  "level": 20,
                  "parent": "database",
                  "mandatory": true,
                  "lookupSupported": true,
                  "recursiveSupported": false,
                  "excludesSupported": false,
                  "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
                  "matcherOptions": {
                      "wildCard": "false",
                      "ignoreCase": "true"
                  },
                  "validationRegEx": "",
                  "validationMessage": "",
                  "uiHint": "{ \"singleValue\":true }",
                  "label": "Hive Table",
                  "description": "Hive Table",
                  "accessTypeRestrictions": [],
                  "isValidLeaf": false
              },
              {
                  "itemId": 4,
                  "name": "column",
                  "type": "string",
                  "level": 30,
                  "parent": "table",
                  "mandatory": true,
                  "lookupSupported": true,
                  "recursiveSupported": false,
                  "excludesSupported": false,
                  "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
                  "matcherOptions": {
                      "wildCard": "false",
                      "ignoreCase": "true"
                  },
                  "validationRegEx": "",
                  "validationMessage": "",
                  "uiHint": "{ \"singleValue\":true }",
                  "label": "Hive Column",
                  "description": "Hive Column",
                  "accessTypeRestrictions": [],
                  "isValidLeaf": true
              }
          ]
      },
      "rowFilterDef": {
          "accessTypes": [
              {
                  "itemId": 1,
                  "name": "select",
                  "label": "select",
                  "impliedGrants": []
              }
          ],
          "resources": [
              {
                  "itemId": 1,
                  "name": "database",
                  "type": "string",
                  "level": 10,
                  "mandatory": true,
                  "lookupSupported": true,
                  "recursiveSupported": false,
                  "excludesSupported": false,
                  "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
                  "matcherOptions": {
                      "wildCard": "false",
                      "ignoreCase": "true"
                  },
                  "validationRegEx": "",
                  "validationMessage": "",
                  "uiHint": "{ \"singleValue\":true }",
                  "label": "Hive Database",
                  "description": "Hive Database",
                  "accessTypeRestrictions": [],
                  "isValidLeaf": false
              },
              {
                  "itemId": 2,
                  "name": "table",
                  "type": "string",
                  "level": 20,
                  "parent": "database",
                  "mandatory": true,
                  "lookupSupported": true,
                  "recursiveSupported": false,
                  "excludesSupported": false,
                  "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
                  "matcherOptions": {
                      "wildCard": "false",
                      "ignoreCase": "true"
                  },
                  "validationRegEx": "",
                  "validationMessage": "",
                  "uiHint": "{ \"singleValue\":true }",
                  "label": "Hive Table",
                  "description": "Hive Table",
                  "accessTypeRestrictions": [],
                  "isValidLeaf": true
              }
          ]
      }
  },
  "auditMode": "audit-default",
  "tagPolicies": {
      "serviceName": "spark_tag",
      "serviceId": 2,
      "policyVersion": 2,
      "policyUpdateTime": 1688184662000,
      "policies": [
          {
              "id": 5,
              "guid": "c12eb06d-1c55-461e-a95d-b2f0c1a62b09",
              "isEnabled": true,
              "version": 1,
              "service": "spark_tag",
              "name": "EXPIRES_ON",
              "policyType": 0,
              "policyPriority": 0,
              "description": "Policy for data with EXPIRES_ON tag",
              "isAuditEnabled": true,
              "resources": {
                  "tag": {
                      "values": [
                          "EXPIRES_ON"
                      ],
                      "isExcludes": false,
                      "isRecursive": false
                  }
              },
              "policyItems": [],
              "denyPolicyItems": [
                  {
                      "accesses": [
                          {
                              "type": "sqoop:READ",
                              "isAllowed": true
                          },
                          {
                              "type": "sqoop:WRITE",
                              "isAllowed": true
                          },
                          {
                              "type": "kylin:QUERY",
                              "isAllowed": true
                          },
                          {
                              "type": "kylin:OPERATION",
                              "isAllowed": true
                          },
                          {
                              "type": "kylin:MANAGEMENT",
                              "isAllowed": true
                          },
                          {
                              "type": "kylin:ADMIN",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:all",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:monitor",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:manage",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:view_index_metadata",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:read",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:read_cross_cluster",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:index",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:create",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:delete",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:write",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:delete_index",
                              "isAllowed": true
                          },
                          {
                              "type": "elasticsearch:create_index",
                              "isAllowed": true
                          },
                          {
                              "type": "presto:select",
                              "isAllowed": true
                          },
                          {
                              "type": "presto:insert",
                              "isAllowed": true
                          },
                          {
                              "type": "presto:create",
                              "isAllowed": true
                          },
                          {
                              "type": "presto:drop",
                              "isAllowed": true
                          },
                          {
                              "type": "presto:use",
                              "isAllowed": true
                          },
                          {
                              "type": "presto:alter",
                              "isAllowed": true
                          },
                          {
                              "type": "presto:admin",
                              "isAllowed": true
                          },
                          {
                              "type": "presto:all",
                              "isAllowed": true
                          },
                          {
                              "type": "ozone:all",
                              "isAllowed": true
                          },
                          {
                              "type": "ozone:read",
                              "isAllowed": true
                          },
                          {
                              "type": "ozone:write",
                              "isAllowed": true
                          },
                          {
                              "type": "ozone:create",
                              "isAllowed": true
                          },
                          {
                              "type": "ozone:list",
                              "isAllowed": true
                          },
                          {
                              "type": "ozone:delete",
                              "isAllowed": true
                          },
                          {
                              "type": "hdfs:read",
                              "isAllowed": true
                          },
                          {
                              "type": "hdfs:write",
                              "isAllowed": true
                          },
                          {
                              "type": "hdfs:execute",
                              "isAllowed": true
                          },
                          {
                              "type": "hbase:read",
                              "isAllowed": true
                          },
                          {
                              "type": "hbase:write",
                              "isAllowed": true
                          },
                          {
                              "type": "hbase:create",
                              "isAllowed": true
                          },
                          {
                              "type": "hbase:admin",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:select",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:update",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:create",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:drop",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:alter",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:index",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:lock",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:all",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:read",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:write",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:repladmin",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:serviceadmin",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:tempudfadmin",
                              "isAllowed": true
                          },
                          {
                              "type": "hive:refresh",
                              "isAllowed": true
                          },
                          {
                              "type": "yarn:submit-app",
                              "isAllowed": true
                          },
                          {
                              "type": "yarn:admin-queue",
                              "isAllowed": true
                          },
                          {
                              "type": "knox:allow",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:submitTopology",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:fileUpload",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:fileDownload",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:killTopology",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:rebalance",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:activate",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:deactivate",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:getTopologyConf",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:getTopology",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:getUserTopology",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:getTopologyInfo",
                              "isAllowed": true
                          },
                          {
                              "type": "storm:uploadNewCredentials",
                              "isAllowed": true
                          },
                          {
                              "type": "kms:create",
                              "isAllowed": true
                          },
                          {
                              "type": "kms:delete",
                              "isAllowed": true
                          },
                          {
                              "type": "kms:rollover",
                              "isAllowed": true
                          },
                          {
                              "type": "kms:setkeymaterial",
                              "isAllowed": true
                          },
                          {
                              "type": "kms:get",
                              "isAllowed": true
                          },
                          {
                              "type": "kms:getkeys",
                              "isAllowed": true
                          },
                          {
                              "type": "kms:getmetadata",
                              "isAllowed": true
                          },
                          {
                              "type": "kms:generateeek",
                              "isAllowed": true
                          },
                          {
                              "type": "kms:decrypteek",
                              "isAllowed": true
                          },
                          {
                              "type": "solr:query",
                              "isAllowed": true
                          },
                          {
                              "type": "solr:update",
                              "isAllowed": true
                          },
                          {
                              "type": "solr:others",
                              "isAllowed": true
                          },
                          {
                              "type": "solr:solr_admin",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:publish",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:consume",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:configure",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:describe",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:create",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:delete",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:kafka_admin",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:idempotent_write",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:describe_configs",
                              "isAllowed": true
                          },
                          {
                              "type": "kafka:alter_configs",
                              "isAllowed": true
                          },
                          {
                              "type": "nifi:READ",
                              "isAllowed": true
                          },
                          {
                              "type": "nifi:WRITE",
                              "isAllowed": true
                          },
                          {
                              "type": "nifi-registry:READ",
                              "isAllowed": true
                          },
                          {
                              "type": "nifi-registry:WRITE",
                              "isAllowed": true
                          },
                          {
                              "type": "nifi-registry:DELETE",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:type-create",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:type-update",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:type-delete",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:entity-read",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:entity-create",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:entity-update",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:entity-delete",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:entity-add-classification",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:entity-update-classification",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:entity-remove-classification",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:admin-export",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:admin-import",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:add-relationship",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:update-relationship",
                              "isAllowed": true
                          },
                          {
                              "type": "atlas:remove-relationship",
                              "isAllowed": true
                          }
                      ],
                      "users": [],
                      "groups": [
                          "public"
                      ],
                      "roles": [],
                      "conditions": [
                          {
                              "type": "accessed-after-expiry",
                              "values": [
                                  "yes"
                              ]
                          }
                      ],
                      "delegateAdmin": false
                  }
              ],
              "allowExceptions": [],
              "denyExceptions": [],
              "dataMaskPolicyItems": [],
              "rowFilterPolicyItems": [],
              "serviceType": "100",
              "options": {},
              "validitySchedules": [],
              "policyLabels": [],
              "zoneName": "",
              "isDenyAllElse": false
          }
      ],
      "serviceDef": {
          "id": 100,
          "guid": "0d047248-baff-4cf9-8e9e-d5d377284b2e",
          "isEnabled": true,
          "createTime": 1688184202000,
          "updateTime": 1688184209000,
          "version": 18,
          "name": "tag",
          "implClass": "org.apache.ranger.services.tag.RangerServiceTag",
          "label": "TAG",
          "description": "TAG Service Definition",
          "options": {
              "enableDenyAndExceptionsInPolicies": "true",
              "ui.pages": "tag-based-policies"
          },
          "configs": [],
          "resources": [
              {
                  "itemId": 1,
                  "name": "tag",
                  "type": "string",
                  "level": 1,
                  "mandatory": true,
                  "lookupSupported": true,
                  "recursiveSupported": false,
                  "excludesSupported": false,
                  "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
                  "matcherOptions": {
                      "wildCard": "false",
                      "ignoreCase": "false"
                  },
                  "validationRegEx": "",
                  "validationMessage": "",
                  "uiHint": "{ \"singleValue\":true }",
                  "label": "TAG",
                  "description": "TAG",
                  "accessTypeRestrictions": [],
                  "isValidLeaf": true
              }
          ],
          "accessTypes": [
              {
                  "itemId": 14015,
                  "name": "sqoop:READ",
                  "label": "READ",
                  "impliedGrants": []
              },
              {
                  "itemId": 14016,
                  "name": "sqoop:WRITE",
                  "label": "WRITE",
                  "impliedGrants": []
              },
              {
                  "itemId": 12013,
                  "name": "kylin:QUERY",
                  "label": "QUERY",
                  "impliedGrants": []
              },
              {
                  "itemId": 12014,
                  "name": "kylin:OPERATION",
                  "label": "OPERATION",
                  "impliedGrants": []
              },
              {
                  "itemId": 12015,
                  "name": "kylin:MANAGEMENT",
                  "label": "MANAGEMENT",
                  "impliedGrants": []
              },
              {
                  "itemId": 12016,
                  "name": "kylin:ADMIN",
                  "label": "ADMIN",
                  "impliedGrants": []
              },
              {
                  "itemId": 16017,
                  "name": "elasticsearch:all",
                  "label": "all",
                  "impliedGrants": [
                      "elasticsearch:monitor",
                      "elasticsearch:manage",
                      "elasticsearch:view_index_metadata",
                      "elasticsearch:read",
                      "elasticsearch:read_cross_cluster",
                      "elasticsearch:index",
                      "elasticsearch:create",
                      "elasticsearch:delete",
                      "elasticsearch:write",
                      "elasticsearch:delete_index",
                      "elasticsearch:create_index",
                      "elasticsearch:indices_put",
                      "elasticsearch:indices_search_shards",
                      "elasticsearch:indices_bulk",
                      "elasticsearch:indices_index"
                  ]
              },
              {
                  "itemId": 16018,
                  "name": "elasticsearch:monitor",
                  "label": "monitor",
                  "impliedGrants": []
              },
              {
                  "itemId": 16019,
                  "name": "elasticsearch:manage",
                  "label": "manage",
                  "impliedGrants": [
                      "elasticsearch:monitor"
                  ]
              },
              {
                  "itemId": 16020,
                  "name": "elasticsearch:view_index_metadata",
                  "label": "view_index_metadata",
                  "impliedGrants": [
                      "elasticsearch:indices_search_shards"
                  ]
              },
              {
                  "itemId": 16021,
                  "name": "elasticsearch:read",
                  "label": "read",
                  "impliedGrants": []
              },
              {
                  "itemId": 16022,
                  "name": "elasticsearch:read_cross_cluster",
                  "label": "read_cross_cluster",
                  "impliedGrants": [
                      "elasticsearch:indices_search_shards"
                  ]
              },
              {
                  "itemId": 16023,
                  "name": "elasticsearch:index",
                  "label": "index",
                  "impliedGrants": [
                      "elasticsearch:indices_put",
                      "elasticsearch:indices_bulk",
                      "elasticsearch:indices_index"
                  ]
              },
              {
                  "itemId": 16024,
                  "name": "elasticsearch:create",
                  "label": "create",
                  "impliedGrants": [
                      "elasticsearch:indices_put",
                      "elasticsearch:indices_bulk",
                      "elasticsearch:indices_index"
                  ]
              },
              {
                  "itemId": 16025,
                  "name": "elasticsearch:delete",
                  "label": "delete",
                  "impliedGrants": [
                      "elasticsearch:indices_bulk"
                  ]
              },
              {
                  "itemId": 16026,
                  "name": "elasticsearch:write",
                  "label": "write",
                  "impliedGrants": [
                      "elasticsearch:indices_put"
                  ]
              },
              {
                  "itemId": 16027,
                  "name": "elasticsearch:delete_index",
                  "label": "delete_index",
                  "impliedGrants": []
              },
              {
                  "itemId": 16028,
                  "name": "elasticsearch:create_index",
                  "label": "create_index",
                  "impliedGrants": []
              },
              {
                  "itemId": 17018,
                  "name": "presto:select",
                  "label": "Select",
                  "impliedGrants": []
              },
              {
                  "itemId": 17019,
                  "name": "presto:insert",
                  "label": "Insert",
                  "impliedGrants": []
              },
              {
                  "itemId": 17020,
                  "name": "presto:create",
                  "label": "Create",
                  "impliedGrants": []
              },
              {
                  "itemId": 17021,
                  "name": "presto:drop",
                  "label": "Drop",
                  "impliedGrants": []
              },
              {
                  "itemId": 17022,
                  "name": "presto:use",
                  "label": "Use",
                  "impliedGrants": []
              },
              {
                  "itemId": 17023,
                  "name": "presto:alter",
                  "label": "Alter",
                  "impliedGrants": []
              },
              {
                  "itemId": 17024,
                  "name": "presto:admin",
                  "label": "Admin",
                  "impliedGrants": []
              },
              {
                  "itemId": 17025,
                  "name": "presto:all",
                  "label": "All",
                  "impliedGrants": [
                      "presto:select",
                      "presto:insert",
                      "presto:create",
                      "presto:drop",
                      "presto:use",
                      "presto:alter",
                      "presto:admin"
                  ]
              },
              {
                  "itemId": 201209,
                  "name": "ozone:all",
                  "label": "All",
                  "impliedGrants": [
                      "ozone:read",
                      "ozone:write",
                      "ozone:create",
                      "ozone:list",
                      "ozone:delete"
                  ]
              },
              {
                  "itemId": 201202,
                  "name": "ozone:read",
                  "label": "Read",
                  "impliedGrants": []
              },
              {
                  "itemId": 201203,
                  "name": "ozone:write",
                  "label": "Write",
                  "impliedGrants": []
              },
              {
                  "itemId": 201204,
                  "name": "ozone:create",
                  "label": "Create",
                  "impliedGrants": []
              },
              {
                  "itemId": 201205,
                  "name": "ozone:list",
                  "label": "List",
                  "impliedGrants": []
              },
              {
                  "itemId": 201206,
                  "name": "ozone:delete",
                  "label": "Delete",
                  "impliedGrants": []
              },
              {
                  "itemId": 1002,
                  "name": "hdfs:read",
                  "label": "Read",
                  "impliedGrants": []
              },
              {
                  "itemId": 1003,
                  "name": "hdfs:write",
                  "label": "Write",
                  "impliedGrants": []
              },
              {
                  "itemId": 1004,
                  "name": "hdfs:execute",
                  "label": "Execute",
                  "impliedGrants": []
              },
              {
                  "itemId": 2003,
                  "name": "hbase:read",
                  "label": "Read",
                  "impliedGrants": []
              },
              {
                  "itemId": 2004,
                  "name": "hbase:write",
                  "label": "Write",
                  "impliedGrants": []
              },
              {
                  "itemId": 2005,
                  "name": "hbase:create",
                  "label": "Create",
                  "impliedGrants": []
              },
              {
                  "itemId": 2006,
                  "name": "hbase:admin",
                  "label": "Admin",
                  "impliedGrants": [
                      "hbase:read",
                      "hbase:write",
                      "hbase:create"
                  ]
              },
              {
                  "itemId": 3004,
                  "name": "hive:select",
                  "label": "select",
                  "impliedGrants": []
              },
              {
                  "itemId": 3005,
                  "name": "hive:update",
                  "label": "update",
                  "impliedGrants": []
              },
              {
                  "itemId": 3006,
                  "name": "hive:create",
                  "label": "Create",
                  "impliedGrants": []
              },
              {
                  "itemId": 3007,
                  "name": "hive:drop",
                  "label": "Drop",
                  "impliedGrants": []
              },
              {
                  "itemId": 3008,
                  "name": "hive:alter",
                  "label": "Alter",
                  "impliedGrants": []
              },
              {
                  "itemId": 3009,
                  "name": "hive:index",
                  "label": "Index",
                  "impliedGrants": []
              },
              {
                  "itemId": 3010,
                  "name": "hive:lock",
                  "label": "Lock",
                  "impliedGrants": []
              },
              {
                  "itemId": 3011,
                  "name": "hive:all",
                  "label": "All",
                  "impliedGrants": [
                      "hive:select",
                      "hive:update",
                      "hive:create",
                      "hive:drop",
                      "hive:alter",
                      "hive:index",
                      "hive:lock",
                      "hive:read",
                      "hive:write",
                      "hive:repladmin",
                      "hive:serviceadmin",
                      "hive:refresh"
                  ]
              },
              {
                  "itemId": 3012,
                  "name": "hive:read",
                  "label": "Read",
                  "impliedGrants": []
              },
              {
                  "itemId": 3013,
                  "name": "hive:write",
                  "label": "Write",
                  "impliedGrants": []
              },
              {
                  "itemId": 3014,
                  "name": "hive:repladmin",
                  "label": "ReplAdmin",
                  "impliedGrants": []
              },
              {
                  "itemId": 3015,
                  "name": "hive:serviceadmin",
                  "label": "Service Admin",
                  "impliedGrants": []
              },
              {
                  "itemId": 3016,
                  "name": "hive:tempudfadmin",
                  "label": "Temporary UDF Admin",
                  "impliedGrants": []
              },
              {
                  "itemId": 3017,
                  "name": "hive:refresh",
                  "label": "Refresh",
                  "impliedGrants": []
              },
              {
                  "itemId": 4005,
                  "name": "yarn:submit-app",
                  "label": "submit-app",
                  "impliedGrants": []
              },
              {
                  "itemId": 4006,
                  "name": "yarn:admin-queue",
                  "label": "admin-queue",
                  "impliedGrants": [
                      "yarn:submit-app"
                  ]
              },
              {
                  "itemId": 5006,
                  "name": "knox:allow",
                  "label": "Allow",
                  "impliedGrants": []
              },
              {
                  "itemId": 6007,
                  "name": "storm:submitTopology",
                  "label": "Submit Topology",
                  "impliedGrants": [
                      "storm:fileUpload",
                      "storm:fileDownload"
                  ]
              },
              {
                  "itemId": 6008,
                  "name": "storm:fileUpload",
                  "label": "File Upload",
                  "impliedGrants": []
              },
              {
                  "itemId": 6011,
                  "name": "storm:fileDownload",
                  "label": "File Download",
                  "impliedGrants": []
              },
              {
                  "itemId": 6012,
                  "name": "storm:killTopology",
                  "label": "Kill Topology",
                  "impliedGrants": []
              },
              {
                  "itemId": 6013,
                  "name": "storm:rebalance",
                  "label": "Rebalance",
                  "impliedGrants": []
              },
              {
                  "itemId": 6014,
                  "name": "storm:activate",
                  "label": "Activate",
                  "impliedGrants": []
              },
              {
                  "itemId": 6015,
                  "name": "storm:deactivate",
                  "label": "Deactivate",
                  "impliedGrants": []
              },
              {
                  "itemId": 6016,
                  "name": "storm:getTopologyConf",
                  "label": "Get Topology Conf",
                  "impliedGrants": []
              },
              {
                  "itemId": 6017,
                  "name": "storm:getTopology",
                  "label": "Get Topology",
                  "impliedGrants": []
              },
              {
                  "itemId": 6018,
                  "name": "storm:getUserTopology",
                  "label": "Get User Topology",
                  "impliedGrants": []
              },
              {
                  "itemId": 6019,
                  "name": "storm:getTopologyInfo",
                  "label": "Get Topology Info",
                  "impliedGrants": []
              },
              {
                  "itemId": 6020,
                  "name": "storm:uploadNewCredentials",
                  "label": "Upload New Credential",
                  "impliedGrants": []
              },
              {
                  "itemId": 7008,
                  "name": "kms:create",
                  "label": "Create",
                  "impliedGrants": []
              },
              {
                  "itemId": 7009,
                  "name": "kms:delete",
                  "label": "Delete",
                  "impliedGrants": []
              },
              {
                  "itemId": 7010,
                  "name": "kms:rollover",
                  "label": "Rollover",
                  "impliedGrants": []
              },
              {
                  "itemId": 7011,
                  "name": "kms:setkeymaterial",
                  "label": "Set Key Material",
                  "impliedGrants": []
              },
              {
                  "itemId": 7012,
                  "name": "kms:get",
                  "label": "Get",
                  "impliedGrants": []
              },
              {
                  "itemId": 7013,
                  "name": "kms:getkeys",
                  "label": "Get Keys",
                  "impliedGrants": []
              },
              {
                  "itemId": 7014,
                  "name": "kms:getmetadata",
                  "label": "Get Metadata",
                  "impliedGrants": []
              },
              {
                  "itemId": 7015,
                  "name": "kms:generateeek",
                  "label": "Generate EEK",
                  "impliedGrants": []
              },
              {
                  "itemId": 7016,
                  "name": "kms:decrypteek",
                  "label": "Decrypt EEK",
                  "impliedGrants": []
              },
              {
                  "itemId": 8108,
                  "name": "solr:query",
                  "label": "Query",
                  "impliedGrants": []
              },
              {
                  "itemId": 8208,
                  "name": "solr:update",
                  "label": "Update",
                  "impliedGrants": []
              },
              {
                  "itemId": 8308,
                  "name": "solr:others",
                  "label": "Others",
                  "impliedGrants": []
              },
              {
                  "itemId": 8908,
                  "name": "solr:solr_admin",
                  "label": "Solr Admin",
                  "impliedGrants": [
                      "solr:query",
                      "solr:update",
                      "solr:others"
                  ]
              },
              {
                  "itemId": 9010,
                  "name": "kafka:publish",
                  "label": "Publish",
                  "impliedGrants": [
                      "kafka:describe"
                  ]
              },
              {
                  "itemId": 9011,
                  "name": "kafka:consume",
                  "label": "Consume",
                  "impliedGrants": [
                      "kafka:describe"
                  ]
              },
              {
                  "itemId": 9014,
                  "name": "kafka:configure",
                  "label": "Configure",
                  "impliedGrants": [
                      "kafka:describe"
                  ]
              },
              {
                  "itemId": 9015,
                  "name": "kafka:describe",
                  "label": "Describe",
                  "impliedGrants": []
              },
              {
                  "itemId": 9017,
                  "name": "kafka:create",
                  "label": "Create",
                  "impliedGrants": []
              },
              {
                  "itemId": 9018,
                  "name": "kafka:delete",
                  "label": "Delete",
                  "impliedGrants": [
                      "kafka:describe"
                  ]
              },
              {
                  "itemId": 9016,
                  "name": "kafka:kafka_admin",
                  "label": "Kafka Admin",
                  "impliedGrants": [
                      "kafka:publish",
                      "kafka:consume",
                      "kafka:configure",
                      "kafka:describe",
                      "kafka:create",
                      "kafka:delete"
                  ]
              },
              {
                  "itemId": 9019,
                  "name": "kafka:idempotent_write",
                  "label": "Idempotent Write",
                  "impliedGrants": []
              },
              {
                  "itemId": 9020,
                  "name": "kafka:describe_configs",
                  "label": "Describe Configs",
                  "impliedGrants": []
              },
              {
                  "itemId": 9021,
                  "name": "kafka:alter_configs",
                  "label": "Alter Configs",
                  "impliedGrants": [
                      "kafka:describe_configs"
                  ]
              },
              {
                  "itemId": 10110,
                  "name": "nifi:READ",
                  "label": "Read",
                  "impliedGrants": []
              },
              {
                  "itemId": 10210,
                  "name": "nifi:WRITE",
                  "label": "Write",
                  "impliedGrants": []
              },
              {
                  "itemId": 13113,
                  "name": "nifi-registry:READ",
                  "label": "Read",
                  "impliedGrants": []
              },
              {
                  "itemId": 13213,
                  "name": "nifi-registry:WRITE",
                  "label": "Write",
                  "impliedGrants": []
              },
              {
                  "itemId": 13313,
                  "name": "nifi-registry:DELETE",
                  "label": "Delete",
                  "impliedGrants": []
              },
              {
                  "itemId": 15016,
                  "name": "atlas:type-create",
                  "label": "Create Type",
                  "impliedGrants": []
              },
              {
                  "itemId": 15017,
                  "name": "atlas:type-update",
                  "label": "UpdateType",
                  "impliedGrants": []
              },
              {
                  "itemId": 15018,
                  "name": "atlas:type-delete",
                  "label": "Delete Type",
                  "impliedGrants": []
              },
              {
                  "itemId": 15019,
                  "name": "atlas:entity-read",
                  "label": "Read Entity",
                  "impliedGrants": []
              },
              {
                  "itemId": 15020,
                  "name": "atlas:entity-create",
                  "label": "Create Entity",
                  "impliedGrants": []
              },
              {
                  "itemId": 15021,
                  "name": "atlas:entity-update",
                  "label": "Update Entity",
                  "impliedGrants": []
              },
              {
                  "itemId": 15022,
                  "name": "atlas:entity-delete",
                  "label": "Delete Entity",
                  "impliedGrants": []
              },
              {
                  "itemId": 15023,
                  "name": "atlas:entity-add-classification",
                  "label": "Add Classification",
                  "impliedGrants": []
              },
              {
                  "itemId": 15024,
                  "name": "atlas:entity-update-classification",
                  "label": "Update Classification",
                  "impliedGrants": []
              },
              {
                  "itemId": 15025,
                  "name": "atlas:entity-remove-classification",
                  "label": "Remove Classification",
                  "impliedGrants": []
              },
              {
                  "itemId": 15026,
                  "name": "atlas:admin-export",
                  "label": "Admin Export",
                  "impliedGrants": []
              },
              {
                  "itemId": 15027,
                  "name": "atlas:admin-import",
                  "label": "Admin Import",
                  "impliedGrants": []
              },
              {
                  "itemId": 15028,
                  "name": "atlas:add-relationship",
                  "label": "Add Relationship",
                  "impliedGrants": []
              },
              {
                  "itemId": 15029,
                  "name": "atlas:update-relationship",
                  "label": "Update Relationship",
                  "impliedGrants": []
              },
              {
                  "itemId": 15030,
                  "name": "atlas:remove-relationship",
                  "label": "Remove Relationship",
                  "impliedGrants": []
              }
          ],
          "policyConditions": [
              {
                  "itemId": 1,
                  "name": "accessed-after-expiry",
                  "evaluator": "org.apache.ranger.plugin.conditionevaluator.RangerScriptTemplateConditionEvaluator",
                  "evaluatorOptions": {
                      "scriptTemplate": "ctx.isAccessedAfter('expiry_date');"
                  },
                  "uiHint": "{ \"singleValue\":true }",
                  "label": "Accessed after expiry_date (yes/no)?",
                  "description": "Accessed after expiry_date? (yes/no)"
              },
              {
                  "itemId": 2,
                  "name": "expression",
                  "evaluator": "org.apache.ranger.plugin.conditionevaluator.RangerScriptConditionEvaluator",
                  "evaluatorOptions": {
                      "engineName": "JavaScript",
                      "ui.isMultiline": "true"
                  },
                  "label": "Enter boolean expression",
                  "description": "Boolean expression"
              }
          ],
          "contextEnrichers": [
              {
                  "itemId": 1,
                  "name": "TagEnricher",
                  "enricher": "org.apache.ranger.plugin.contextenricher.RangerTagEnricher",
                  "enricherOptions": {
                      "tagRetrieverClassName": "org.apache.ranger.plugin.contextenricher.RangerAdminTagRetriever",
                      "tagRefresherPollingInterval": "60000"
                  }
              }
          ],
          "enums": [],
          "dataMaskDef": {
              "maskTypes": [
                  {
                      "itemId": 3004,
                      "name": "hive:MASK",
                      "label": "Redact",
                      "description": "Replace lowercase with 'x', uppercase with 'X', digits with '0'",
                      "transformer": "mask({col})",
                      "dataMaskOptions": {}
                  },
                  {
                      "itemId": 3005,
                      "name": "hive:MASK_SHOW_LAST_4",
                      "label": "Partial mask: show last 4",
                      "description": "Show last 4 characters; replace rest with 'x'",
                      "transformer": "mask_show_last_n({col}, 4, 'x', 'x', 'x', -1, '1')",
                      "dataMaskOptions": {}
                  },
                  {
                      "itemId": 3006,
                      "name": "hive:MASK_SHOW_FIRST_4",
                      "label": "Partial mask: show first 4",
                      "description": "Show first 4 characters; replace rest with 'x'",
                      "transformer": "mask_show_first_n({col}, 4, 'x', 'x', 'x', -1, '1')",
                      "dataMaskOptions": {}
                  },
                  {
                      "itemId": 3007,
                      "name": "hive:MASK_HASH",
                      "label": "Hash",
                      "description": "Hash the value",
                      "transformer": "mask_hash({col})",
                      "dataMaskOptions": {}
                  },
                  {
                      "itemId": 3008,
                      "name": "hive:MASK_NULL",
                      "label": "Nullify",
                      "description": "Replace with NULL",
                      "dataMaskOptions": {}
                  },
                  {
                      "itemId": 3009,
                      "name": "hive:MASK_NONE",
                      "label": "Unmasked (retain original value)",
                      "description": "No masking",
                      "dataMaskOptions": {}
                  },
                  {
                      "itemId": 3015,
                      "name": "hive:MASK_DATE_SHOW_YEAR",
                      "label": "Date: show only year",
                      "description": "Date: show only year",
                      "transformer": "mask({col}, 'x', 'x', 'x', -1, '1', 1, 0, -1)",
                      "dataMaskOptions": {}
                  },
                  {
                      "itemId": 3016,
                      "name": "hive:CUSTOM",
                      "label": "Custom",
                      "description": "Custom",
                      "dataMaskOptions": {}
                  }
              ],
              "accessTypes": [
                  {
                      "itemId": 3004,
                      "name": "hive:select",
                      "label": "select",
                      "impliedGrants": []
                  }
              ],
              "resources": [
                  {
                      "itemId": 1,
                      "name": "tag",
                      "type": "string",
                      "level": 1,
                      "mandatory": true,
                      "lookupSupported": true,
                      "recursiveSupported": false,
                      "excludesSupported": false,
                      "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
                      "matcherOptions": {
                          "__isValidLeaf": "true",
                          "wildCard": "false",
                          "__accessTypeRestrictions": "[]",
                          "ignoreCase": "false"
                      },
                      "validationRegEx": "",
                      "validationMessage": "",
                      "uiHint": "{ \"singleValue\":true }",
                      "label": "TAG",
                      "description": "TAG",
                      "accessTypeRestrictions": [],
                      "isValidLeaf": true
                  }
              ]
          },
          "rowFilterDef": {
              "accessTypes": [],
              "resources": []
          }
      },
      "auditMode": "audit-default"
  }
}